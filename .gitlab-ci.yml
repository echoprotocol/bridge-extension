stages:
  - test
  - build
  - publish

test:lint:
  image: node:12
  stage: test
  cache:
    paths:
      - node_modules
  script:
    - npm i
    - npm run lint
  only:
    - merge_requests
  tags:
    - docker

test:test:
  image: node:12
  stage: test
  cache:
    paths:
      - node_modules
  script:
    - npm i
    - npm run test
  only:
    - merge_requests
  tags:
    - docker

build:
  image: node:10.16
  stage: build
  cache:
    paths:
      - node_modules
  script:
    - npm i
    - npm run build-ext
  only:
    - tags
  except:
    - /^.*rc.*$/
  artifacts:
    paths:
      - build/zip/echo_bridge.zip
  tags:
    - docker

publish:
  stage: publish
  dependencies:
    - build
  before_script:
    - apt-get update -y && apt-get -y --allow-unauthenticated install curl jq
  script:
    - ACCESS_TOKEN=$(curl "https://accounts.google.com/o/oauth2/token" -d "client_id=${CHROME_CLIENT_ID}&client_secret=${CHROME_CLIENT_SECRET}&refresh_token=${CHROME_REFRESH_TOKEN}&grant_type=refresh_token&redirect_uri=urn:ietf:wg:oauth:2.0:oob" | jq -r .access_token)
    - 'curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "x-goog-api-version: 2" -X PUT -T ./build/zip/echo_bridge.zip -v "https://www.googleapis.com/upload/chromewebstore/v1.1/items/${CHROME_APP_ID}"'
    - 'curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "x-goog-api-version: 2" -H "Content-Length: 0" -X POST -v "https://www.googleapis.com/chromewebstore/v1.1/items/${CHROME_APP_ID}/publish?publishTarget=default"'
  tags:
    - docker
  only:
    - tags
  except:
    - /^.*rc.*$/
